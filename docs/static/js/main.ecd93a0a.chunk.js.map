{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridtem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridtem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAa,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAmB3C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,UACM,mCAAMD,EAAN,OACA,uBACGQ,KAAK,OACFC,MAAQT,EACRU,SArBS,SAACP,GACtBF,EAAeE,EAAEQ,OAAOF,cA2BhCZ,EAAYe,UAAW,CACnBd,c,OAAee,EAAUC,KAAKC,Y,mCCjCpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAafM,GAbe,4CAAH,sDCDRO,EAAa,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCLEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAX,SAAEA,GAAe,IAAD,EAEhBlB,mBAAU,CAChCyB,KAAK,GACLa,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KA4B1C,OArBAC,qBAAW,WAETxB,EAASC,GACNwB,MAAM,SAAAC,GAEHH,EAAS,CACPf,KAAKkB,EACLL,SAAS,SAKhB,CAAEpB,IASEqB,ED1B0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAarB,OAEC,qCACI,qBAAKJ,UAAU,uCAAf,cAAyDhB,EAAzD,OAEEoB,GAAW,wCAGb,qBAAKJ,UAAU,YAAf,SAGWH,EAAOJ,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADCA,EAAIC,aE5BvBgB,EAAe,WAAO,IAAD,EAEI7C,mBAAS,CAAC,cAFd,mBAEzB8C,EAFyB,KAEb/C,EAFa,KAShC,OACK,qCAEC,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEG,6BAGO+C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ecd93a0a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport  PropTypes from 'prop-types';\r\n\r\nexport const AddCategory =({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange =(e)=> {\r\n        setInputValue( e.target.value );\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >2 ){\r\n            setCategories( cats => [ inputValue, ...cats,]);\r\n            setInputValue('');\r\n        }\r\n\r\n        // console.log('Submit hecho')\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n              <h1> {inputValue} </h1>       \r\n              <input\r\n                 type=\"text\" \r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                 />      \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.prototype ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n export const getGifs = async( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=sBjXtXyaF6G70yqK2gKGG2GtO29DRMMR`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n  return gifs;\r\n    \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridtem = ({  title, url }) => {\r\n\r\n    // console.log( id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={ url } alt={ title } />\r\n           <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridtem } from './GifGridtem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    \r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( setImages);\r\n    // }, [ category ]);\r\n\r\n\r\n\r\n//   getGifs();\r\n\r\n    return (\r\n        \r\n     <>\r\n         <h3  className=\"animate__animated animate__heartBeat\"> { category } </h3>\r\n\r\n         { loading && <p>loading</p> }\r\n\r\n\r\n         <div className=\"card-grid\">\r\n                 {\r\n                     \r\n                    images.map( img =>(\r\n                         <GifGridtem  \r\n                             key= {img.id } \r\n                             { ...img }\r\n                          />\r\n                     ))\r\n                 }\r\n           \r\n             </div> \r\n        \r\n     </>\r\n   )\r\n\r\n\r\n }\r\n\r\n\r\n\r\n   \r\n  {/* una forma de hacerlo \r\n                      images.map(img =>(\r\n\r\n                        <li key={img.id}>{ img.title } </li>\r\n                     ))\r\n                     \r\n                      images.map( ( {id, title }) =>(\r\n                         <li key={id}> { title } </li>\r\n                     ))  */}","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\n  export const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState( {\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n      getGifs( category )\r\n        .then( imgs =>{\r\n\r\n            setstate({\r\n              data:imgs,\r\n              loading: false\r\n            });\r\n\r\n          })\r\n         \r\n    }, [ category ])\r\n\r\n    // setTimeout( () => {\r\n    //   setstate({\r\n    //     data:[1,2,3,4,5,6,7],\r\n    //     loading: false \r\n    //   })\r\n    // }, 3000 );\r\n\r\n    return state; //{ data:[] , loading: true};\r\n\r\n  }","  import React, { useState } from 'react'\r\n  import {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n   export const GifExpertApp = () => {\r\n\r\n     const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n     //  const handleAdd = () =>{\r\n    //     setCategories([...categories,'HunterxHunter']);\r\n        // setCategories(['HunterxHunter',...categories]);\r\n    //  }    \r\n    \r\n     return (\r\n          <>\r\n\r\n           <h2> GifExpertApp</h2>\r\n           <AddCategory setCategories={setCategories }/>\r\n           <hr />\r\n\r\n              <ol>\r\n\r\n                 {\r\n                     categories.map (category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                     ))\r\n                 }\r\n\r\n              </ol>\r\n          </>\r\n      )\r\n  }\r\n  \r\n    \r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n//\n"],"sourceRoot":""}